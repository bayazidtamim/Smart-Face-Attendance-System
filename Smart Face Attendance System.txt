using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using Emgu.CV;
using Emgu.CV.Structure;


namespace WindowsFormsApp5
{
    public partial class Form1 : Form
    {
        Image<Bgr, byte> imageinput;
        private object imgGray;

        public Form1()
        {
            InitializeComponent();
        }
    
    private void openToolStripMenuItem_Click(object sender, EventArgs e)
        {
            try
            {
                OpenFileDialog dialog = new OpenFileDialog();
                if (dialog.ShowDialog() == DialogResult.OK)
                {
                    imageinput = new Image<Bgr, byte>(dialog.FileName);
                    pictureBox1.Image = imageinput.Bitmap;
                }

                else
                {
                    throw new Exception("PLEASE SELECTED new file selected");
                }

            }
            catch (Exception Ex)
            {
                MessageBox.Show(Ex.Message);
            }
        }
     private void detectfaceToolStripMenuItem_Click(object sender, EventArgs e)
        {
            try
            {
                if (imageinput == null)
                {
                    throw new Exception("Please select and image");
                }
                facedetect();
            }
            catch (Exception Ex)
            {
                MessageBox.Show(Ex.Message);
            }
        }   
     
     public void facedetect()
        {
            try
            {

                string facepath = Path.GetFullPath(@"../../haarcascade_frontalface_default.xml");
                string eyeepath = Path.GetFullPath(@"../../haarcascade_eye.xml");


                CascadeClassifier classifierFace = new CascadeClassifier(facepath);
                CascadeClassifier classifiereye = new CascadeClassifier(eyeepath);

                var imGray = imageinput.Convert<Bgr, byte>().Clone();
                Rectangle[] faces = classifierFace.DetectMultiScale(imGray, 1.1, 4);
                foreach (var face in faces)
                {
                    imageinput.Draw(face, new Bgr(0, 0, 225), 2);
                    imGray.ROI = face;
                    Rectangle[] eyes = classifiereye.DetectMultiScale(imGray, 1.1, 4);
                    
                    foreach(var eye in eyes)
                    {
                        var e = eye;
                        e.X += face.X;
                        e.Y += face.Y;
                        
                        imageinput.Draw(e, new Bgr(0, 255, 0), 2);
                    }

                }
                pictureBox1.Image = imageinput.Bitmap;


            }
            catch (Exception Ex)
            {
                MessageBox.Show(Ex.Message);
            }
        }
    }
}